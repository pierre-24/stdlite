name: Run test suite

env:
  BUILD_DIR: _build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc]
        la_backend: [openblas, mkl]
    env:
      CC: ${{ matrix.compiler == 'intel' && 'icc' || 'gcc' }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up GCC
        if: ${{ matrix.compiler == 'gcc' }}
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
      - name: Install buil dependencies
        run: |
          sudo apt-get install meson ninja-build valgrind libhdf5-dev
      - name: Install OpenBLAS & Lapack(e)
        if: ${{ matrix.la_backend == 'openblas' }}
        run: |
          sudo apt-get install libopenblas-dev liblapack-dev liblapacke-dev
      - name: Install MKL
        if: ${{ matrix.la_backend == 'mkl' }}
        run: |
          wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt update
          sudo apt install intel-oneapi-mkl-devel
      - name: Configure (with Meson)
        run: >-
          meson setup ${{ env.BUILD_DIR }}
          --buildtype=debug
      - name: Compile (with Meson)
        run: >-
          meson compile
          -C ${{ env.BUILD_DIR }}
      - name: Run unit tests (with Meson)
        run: >-
          meson test
          --print-errorlogs
          -C ${{ env.BUILD_DIR }}
      - name: Memcheck (with Meson & Valgdrind)
        run: >-
          OMP_NUM_THREADS=1 meson test
          --print-errorlogs
          --wrap='valgrind --leak-check=full --error-exitcode=1'
          -C ${{ env.BUILD_DIR }}